apply plugin: 'com.android.library'

android {
    compileSdkVersion 29
    buildToolsVersion "30.0.2"

    defaultConfig {
        minSdkVersion 16
        targetSdkVersion 29
        versionCode 1
        versionName "1.0"

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        consumerProguardFiles "consumer-rules.pro"
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
}

dependencies {
    implementation fileTree(dir: "libs", include: ["*.jar"])
    implementation 'androidx.appcompat:appcompat:1.2.0'
}

/**
 * 生成jar 并将jar包copy至插件下的lib目录
 */
task clearJar(type: Delete) {
    def targetPath = "$rootDir/plugin/lib"
    def targetFile = new File(targetPath)
    if (!targetFile.exists()) {
        targetFile.mkdir()
    }
    //删除之前的lib包
    delete targetPath + '/baselib.jar'
}

task makeJar(type: Copy) {
    def targetPath = "$rootDir/plugin/lib/"
    //jar文件来源
    from('build/intermediates/aar_main_jar/debug/')
    //生成路劲
    into(targetPath)
    include('classes.jar')
    rename('classes.jar', 'baselib.jar')
}

makeJar.dependsOn(clearJar, build)